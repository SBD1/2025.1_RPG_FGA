#!/bin/bash

# --- Configura√ß√£o ---
# O nome de usu√°rio do banco de dados e o nome do banco de dados
PG_USER="postgres" # Superusu√°rio do PostgreSQL para a cria√ß√£o inicial
DB_NAME="rpg_fga"
APP_USER="estudante"

# --- L√≥gica do Script ---

# Para o script se encontrar um erro
set -e

# Detecta o diret√≥rio onde o script est√° localizado. Isso torna os caminhos din√¢micos.
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

echo "Diret√≥rio dos scripts detectado: $SCRIPT_DIR"
echo "--- Iniciando configura√ß√£o do banco de dados: $DB_NAME ---"

# Passo 1: Recria o banco de dados. Usa 'sudo' para rodar como o usu√°rio postgres.
sudo -u "$PG_USER" psql -d postgres -c "DROP DATABASE IF EXISTS $DB_NAME;"
sudo -u "$PG_USER" psql -d postgres -c "CREATE DATABASE $DB_NAME;"

echo "‚úÖ Banco de dados '$DB_NAME' criado."

# Passo 2: Executa os scripts SQL no banco de dados rec√©m-criado.
echo "-> Criando o usu√°rio '$APP_USER' e concedendo permiss√µes..."
sudo -u "$PG_USER" psql -d "$DB_NAME" <<-EOSQL
    DO \$\$
    BEGIN
        IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = '$APP_USER') THEN
            CREATE USER $APP_USER WITH PASSWORD '123';
        END IF;
    END
    \$\$;
    ALTER USER $APP_USER WITH SUPERUSER;
EOSQL

echo "-> Executando DDL para criar a estrutura do banco..."
sudo -u "$PG_USER" psql -d "$DB_NAME" -f "$SCRIPT_DIR/DDL.sql"

echo "-> Executando DML para popular o banco de dados..."
sudo -u "$PG_USER" psql -d "$DB_NAME" -f "$SCRIPT_DIR/DML.sql"

echo "-> Configurando permiss√µes..."
sudo -u "$PG_USER" psql -d "$DB_NAME" -f "$SCRIPT_DIR/permissions.sql"

echo ""
echo "üéâ Configura√ß√£o do banco de dados conclu√≠da com sucesso!"